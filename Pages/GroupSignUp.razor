@page "/GroupSignUp"
@using CampTiger.Models
@using CampTiger.Data
@using Microsoft.AspNetCore.Identity

@attribute [Authorize(Roles = "normal")]

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject GroupService groupService
@inject UserGroupService userGroupService
<h3>Group Sign Up</h3>

@if (groups == null)
{
    <p><em> Loading...</em></p>
}
else
{
    <table class="table table-hover">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var sect in groups)
            {
                <tr>
                    <td>@sect.Name</td>
                    <td>@sect.Description</td>
                    <td>
                        <button class="btn btn-primary" @onclick="(() => Insert(sect))">Sign-Up</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {

    List<Group> groups;
    string groupId;
    string userId;
    private enum MODE { None, Add };
    MODE mode = MODE.None;
    Group group;
    public Group current { get; set; } = new Group();

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await load();
    }

    protected async Task load()
    {
        groups = await groupService.GetGroupAsync();
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var currentUser = await UserManager.GetUserAsync(user);
        userId = currentUser.Id;
    }

    protected async Task Insert(Group activity)
    {
        UserGroups g = new UserGroups()
        {
            GroupId = activity.GroupId,//groupId,
            UserId = userId
        };
        await userGroupService.InsertUserGroupAsync(g);
        await load();
        mode = MODE.None;
    }
}
