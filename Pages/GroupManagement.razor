@page "/GroupManagement"
@using CampTiger.Models
@using CampTiger.Data

@attribute [Authorize(Roles = "admin")]

@inject GroupService groupService
@inject AspNetUsersService aspNetUsersService

<h1> Group Management </h1>
<p> Create, Read, Edit, and Delete Group records.</p>

@if (groups == null)
{
    <p><em> Loading...</em></p>
}
else
{
    <button @onclick="@Add" class="btn btn-success">Add Group</button>
    <table class='table table-hover'>
        <thead>
            <tr>
                <th>ID</th>
                <th>Leader</th>
                <th>Name</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in groups)
            {
                @foreach (var user in users)
                {
                    @if (user.Id == item.Leader)
                    {
                        <tr @onclick="@(() => Show(item.GroupId))">
                            <td>@item.GroupId</td>
                            <td>@user.FirstName  @user.LastName</td>
                            <td>@item.Name</td>
                            <td>@item.Description</td>
                        </tr>
                    }
                }
            }
        </tbody>
    </table>
}
@if (groups != null && mode == MODE.Add) // Insert form
{
    <label> Leader:</label>
    <br>
    <input placeholder="Leader" @bind="@leader" />
    <br />
    <label> Name:</label>
    <br>
    <input placeholder="Name" @bind="@name" />
    <br />
    <label> Description:</label>
    <br>
    <input placeholder="Description" @bind="@description" />
    <br />
    <button @onclick="@Insert" class="btn btn-warning">Insert</button>
}
@if (groups != null && mode == MODE.EditDelete) // Update & Delete form
{
    <label> Group ID: @groupId</label>
    <br>
    <label> Leader: @leader</label>
    <br>
    <label> Name:</label>
    <br>
    <input placeholder="Name" @bind="@name" />
    <br />
    <label> Description:</label>
    <br>
    <input placeholder="Description" @bind="@description" />
    <br />
    <button @onclick="@Update" class="btn btn-primary">Update</button>
    <span>&nbsp;&nbsp;&nbsp;&nbsp;</span>
    <button @onclick="@Delete" class="btn btn-danger">Delete</button>
}

@code {

    List<Group> groups;
    List<AspNetUsers> users;
    string groupId;
    string leader;
    string name;
    string description;
    private enum MODE { None, Add, EditDelete };
    MODE mode = MODE.None;
    Group group;

    protected override async Task OnInitializedAsync()
    {
        await load();
    }

    protected async Task load()
    {
        groups = await groupService.GetGroupAsync();
        users = await aspNetUsersService.GetAspNetUsersAsync();
    }

    protected async Task Insert()
    {
        groupId = Guid.NewGuid().ToString();
        Group g = new Group()
        {
            GroupId = groupId,
            Leader = leader,
            Name = name,
            Description = description
        };

        await groupService.InsertGroupAsync(g);
        ClearFields();
        await load();
        mode = MODE.None;
    }

    protected void ClearFields()
    {
        groupId = string.Empty;
        leader = string.Empty;
        name = string.Empty;
        description = string.Empty;
    }

    protected void Add()
    {
        ClearFields();
        mode = MODE.Add;
    }

    protected async Task Update()
    {

        Group g = new Group()
        {
            GroupId = groupId,
            Leader = leader,
            Name = name,
            Description = description
        };

        await groupService.UpdateGroupAsync(groupId, g);
        ClearFields();
        await load();
        mode = MODE.None;
    }

    protected async Task Delete()
    {
        await groupService.DeleteGroupAsync(groupId);
        ClearFields();
        await load();
        mode = MODE.None;
    }

    protected async Task Show(string id)
    {
        group = await groupService.GetGroupByIdAsync(id);
        groupId = group.GroupId;
        leader = group.Leader;
        description = group.Description;
        name = group.Name;
        mode = MODE.EditDelete;
    }
}

